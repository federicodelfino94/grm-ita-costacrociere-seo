config {
  type: "incremental",
  name: "seo_ga_source_traffic",
  schema: "seo_dashboard_02_raw",
  dependencies: ["temp seo_ga_source_traffic"],
  uniqueKey: ["gaaccountid","gadate","gaprofileid","gaprofilename","gawebpropertyid","gawebpropertyname","gasourcemedium","gadevicecategory","gachannelgrouping", "galandingpagepath"],
  assertions: {
    uniqueKey: ["gaaccountid","gadate","gaprofileid","gaprofilename","gawebpropertyid","gawebpropertyname","gasourcemedium","gadevicecategory","gachannelgrouping", "galandingpagepath"]
  },
  bigquery: {
    partitionBy: "gadate",
    clusterBy: ["gaprofileid", "gawebpropertyid", "gadevicecategory", "gachannelgrouping"]
  }
}

pre_operations {
  declare last_insert_ts default (
    select MAX(dt_created) from ${self()}
  )
}

with up_to_date as (
  select
    * 
    , row_number() over (
        partition by gaaccountid
                     , gadate
                     , gaprofileid
                     , gaprofilename
                     , gawebpropertyid
                     , gawebpropertyname
                     , gasourcemedium
                     , gadevicecategory
                     , gachannelgrouping
        order by dt_updated desc
    ) rank
  from ${ref("seo_dashboard_01_temp", "seo_ga_source_traffic")}
  ${ when(
      incremental(),
      `WHERE dt_created > last_insert_ts`
  )
  }
)
select 
  * except (dt_updated, rank)
from up_to_date
where rank = 1


-- ${get_last_values_by_pk("seo_dashboard_01_temp", "seo_ga_source_traffic", "gaaccountid, gadate, gaprofileid, gaprofilename, gawebpropertyid, gawebpropertyname, gasourcemedium, gadevicecategory, gachannelgrouping, galandingpagepath")}
