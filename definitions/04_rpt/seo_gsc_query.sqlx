config {
  type: "incremental", 
  name: "seo_gsc_query",
  schema: "seo_dashboard_04_rpt",
  dependencies: ["data_flow_insertion_log"],
  uniqueKey: ["year_month", "site", "query"],
  assertions: {
    uniqueKey: ["year_month", "site", "query"]  
  },
  bigquery: {
    partitionBy: "DATE_TRUNC(year_month, MONTH)",
    clusterBy: ["site", "query"]
  },
  tags:["GSC"]
}


pre_operations {
  DECLARE ts DATETIME
  ---
  CREATE TEMP TABLE tmp_t (
    dt_filename STRING,
    file_upload_ts DATETIME
  ) AS 
    select dt_filename , file_upload_ts
    from ${ref("seo_dashboard_utils", "data_flow_insertion_log")}
    where ID_data_flow = 1 --data_flow_name = 'seo_gsc_query'
    and processed_flag = FALSE
  ---
  set ts = (
    select ifnull(MIN(file_upload_ts), DATETIME_ADD(CURRENT_DATETIME(), INTERVAL 1 YEAR)) 
    from tmp_t 
  )
}


with tmp as (
  select 
    cast(CONCAT(FORMAT_DATETIME("%Y-%m", day),'-01') as date) as year_month
    , lower(site) as site
    , lower(SUBSTRING(trim(query), 0, 200)) as query
    , ${gsc_brand_generic_supergeneric_attribution()} as Brand_Generic_SuperGeneric
    , ${gsc_country_attribution()} as Country
    , sum(impressions) as impressions
    , sum(clicks) as clicks
    , avg(position) as position
  from ${ref("seo_dashboard_01_temp", "seo_gsc_query")}
  ${ when(
      incremental(),
      `WHERE dt_created >= date(ts) 
       AND dt_filename in (select dt_filename from tmp_t)
      `
    )
  }
  group by 
    cast(CONCAT(FORMAT_DATETIME("%Y-%m", day),'-01') as date)
    , lower(site) 
    , lower(SUBSTRING(trim(query), 0, 200))
    , Brand_Generic_SuperGeneric
    , Country 
)
select 
  tmp.*
  , c.ID_Country
from tmp 
left join ${ref("seo_dashboard_04_rpt", "D_country")} c
on c.Country = tmp.Country


post_operations {
  UPDATE ${ref("seo_dashboard_utils", "data_flow_insertion_log")}
  SET processed_flag = TRUE
  where file_upload_ts >= ts
  and ID_data_flow = 1 --data_flow_name = 'seo_gsc_query'
  AND dt_filename in (select dt_filename from tmp_t)
}